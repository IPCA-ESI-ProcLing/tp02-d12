Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    EQUALS
    GREATEREQUAL
    NOTEQUALS
    SMALLEREQUAL

Grammar

Rule 0     S' -> body
Rule 1     body -> statement body
Rule 2     body -> statement
Rule 3     statement -> FN NAME ( parameters ) ARROW DTYPE NAME { body }
Rule 4     statement -> FN NAME ( ) { body }
Rule 5     parameters -> parameters , DTYPE NAME
Rule 6     parameters -> DTYPE NAME
Rule 7     expression -> NAME ( arguments )
Rule 8     statement -> PRINT arguments
Rule 9     statement -> var_declaration
Rule 10    arguments -> arguments , expression
Rule 11    arguments -> expression
Rule 12    statement -> VAR var_declaration_list
Rule 13    var_declaration_list -> var_declaration_list , var_declaration
Rule 14    var_declaration_list -> var_declaration
Rule 15    var_declaration -> NAME = expression
Rule 16    var_declaration -> NAME
Rule 17    expression -> expression + expression
Rule 18    expression -> expression - expression
Rule 19    expression -> expression * expression
Rule 20    expression -> expression / expression
Rule 21    expression -> - expression
Rule 22    expression -> ( expression )
Rule 23    expression -> NUMBER
Rule 24    expression -> NAME
Rule 25    expression -> STRING

Terminals, with rules where they appear

(                    : 3 4 7 22
)                    : 3 4 7 22
*                    : 19
+                    : 17
,                    : 5 10 13
-                    : 18 21
/                    : 20
=                    : 15
ARROW                : 3
DTYPE                : 3 5 6
EQUALS               : 
FN                   : 3 4
GREATEREQUAL         : 
NAME                 : 3 3 4 5 6 7 15 16 24
NOTEQUALS            : 
NUMBER               : 23
PRINT                : 8
SMALLEREQUAL         : 
STRING               : 25
VAR                  : 12
error                : 
{                    : 3 4
}                    : 3 4

Nonterminals, with rules where they appear

arguments            : 7 8 10
body                 : 1 3 4 0
expression           : 10 11 15 17 17 18 18 19 19 20 20 21 22
parameters           : 3 5
statement            : 1 2
var_declaration      : 9 13 14
var_declaration_list : 12 13

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . statement body
    (2) body -> . statement
    (3) statement -> . FN NAME ( parameters ) ARROW DTYPE NAME { body }
    (4) statement -> . FN NAME ( ) { body }
    (8) statement -> . PRINT arguments
    (9) statement -> . var_declaration
    (12) statement -> . VAR var_declaration_list
    (15) var_declaration -> . NAME = expression
    (16) var_declaration -> . NAME

    FN              shift and go to state 3
    PRINT           shift and go to state 5
    VAR             shift and go to state 7
    NAME            shift and go to state 4

    body                           shift and go to state 1
    statement                      shift and go to state 2
    var_declaration                shift and go to state 6

state 1

    (0) S' -> body .



state 2

    (1) body -> statement . body
    (2) body -> statement .
    (1) body -> . statement body
    (2) body -> . statement
    (3) statement -> . FN NAME ( parameters ) ARROW DTYPE NAME { body }
    (4) statement -> . FN NAME ( ) { body }
    (8) statement -> . PRINT arguments
    (9) statement -> . var_declaration
    (12) statement -> . VAR var_declaration_list
    (15) var_declaration -> . NAME = expression
    (16) var_declaration -> . NAME

    $end            reduce using rule 2 (body -> statement .)
    }               reduce using rule 2 (body -> statement .)
    FN              shift and go to state 3
    PRINT           shift and go to state 5
    VAR             shift and go to state 7
    NAME            shift and go to state 4

    statement                      shift and go to state 2
    body                           shift and go to state 8
    var_declaration                shift and go to state 6

state 3

    (3) statement -> FN . NAME ( parameters ) ARROW DTYPE NAME { body }
    (4) statement -> FN . NAME ( ) { body }

    NAME            shift and go to state 9


state 4

    (15) var_declaration -> NAME . = expression
    (16) var_declaration -> NAME .

    =               shift and go to state 10
    FN              reduce using rule 16 (var_declaration -> NAME .)
    PRINT           reduce using rule 16 (var_declaration -> NAME .)
    VAR             reduce using rule 16 (var_declaration -> NAME .)
    NAME            reduce using rule 16 (var_declaration -> NAME .)
    $end            reduce using rule 16 (var_declaration -> NAME .)
    }               reduce using rule 16 (var_declaration -> NAME .)
    ,               reduce using rule 16 (var_declaration -> NAME .)


state 5

    (8) statement -> PRINT . arguments
    (10) arguments -> . arguments , expression
    (11) arguments -> . expression
    (7) expression -> . NAME ( arguments )
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . NUMBER
    (24) expression -> . NAME
    (25) expression -> . STRING

    NAME            shift and go to state 13
    -               shift and go to state 15
    (               shift and go to state 14
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17

    arguments                      shift and go to state 11
    expression                     shift and go to state 12

state 6

    (9) statement -> var_declaration .

    FN              reduce using rule 9 (statement -> var_declaration .)
    PRINT           reduce using rule 9 (statement -> var_declaration .)
    VAR             reduce using rule 9 (statement -> var_declaration .)
    NAME            reduce using rule 9 (statement -> var_declaration .)
    $end            reduce using rule 9 (statement -> var_declaration .)
    }               reduce using rule 9 (statement -> var_declaration .)


state 7

    (12) statement -> VAR . var_declaration_list
    (13) var_declaration_list -> . var_declaration_list , var_declaration
    (14) var_declaration_list -> . var_declaration
    (15) var_declaration -> . NAME = expression
    (16) var_declaration -> . NAME

    NAME            shift and go to state 4

    var_declaration_list           shift and go to state 18
    var_declaration                shift and go to state 19

state 8

    (1) body -> statement body .

    $end            reduce using rule 1 (body -> statement body .)
    }               reduce using rule 1 (body -> statement body .)


state 9

    (3) statement -> FN NAME . ( parameters ) ARROW DTYPE NAME { body }
    (4) statement -> FN NAME . ( ) { body }

    (               shift and go to state 20


state 10

    (15) var_declaration -> NAME = . expression
    (7) expression -> . NAME ( arguments )
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . NUMBER
    (24) expression -> . NAME
    (25) expression -> . STRING

    NAME            shift and go to state 13
    -               shift and go to state 15
    (               shift and go to state 14
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17

    expression                     shift and go to state 21

state 11

    (8) statement -> PRINT arguments .
    (10) arguments -> arguments . , expression

    FN              reduce using rule 8 (statement -> PRINT arguments .)
    PRINT           reduce using rule 8 (statement -> PRINT arguments .)
    VAR             reduce using rule 8 (statement -> PRINT arguments .)
    NAME            reduce using rule 8 (statement -> PRINT arguments .)
    $end            reduce using rule 8 (statement -> PRINT arguments .)
    }               reduce using rule 8 (statement -> PRINT arguments .)
    ,               shift and go to state 22


state 12

    (11) arguments -> expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression

    ,               reduce using rule 11 (arguments -> expression .)
    FN              reduce using rule 11 (arguments -> expression .)
    PRINT           reduce using rule 11 (arguments -> expression .)
    VAR             reduce using rule 11 (arguments -> expression .)
    NAME            reduce using rule 11 (arguments -> expression .)
    $end            reduce using rule 11 (arguments -> expression .)
    }               reduce using rule 11 (arguments -> expression .)
    )               reduce using rule 11 (arguments -> expression .)
    +               shift and go to state 23
    -               shift and go to state 24
    *               shift and go to state 25
    /               shift and go to state 26


state 13

    (7) expression -> NAME . ( arguments )
    (24) expression -> NAME .

    (               shift and go to state 27
    +               reduce using rule 24 (expression -> NAME .)
    -               reduce using rule 24 (expression -> NAME .)
    *               reduce using rule 24 (expression -> NAME .)
    /               reduce using rule 24 (expression -> NAME .)
    ,               reduce using rule 24 (expression -> NAME .)
    FN              reduce using rule 24 (expression -> NAME .)
    PRINT           reduce using rule 24 (expression -> NAME .)
    VAR             reduce using rule 24 (expression -> NAME .)
    NAME            reduce using rule 24 (expression -> NAME .)
    $end            reduce using rule 24 (expression -> NAME .)
    }               reduce using rule 24 (expression -> NAME .)
    )               reduce using rule 24 (expression -> NAME .)


state 14

    (22) expression -> ( . expression )
    (7) expression -> . NAME ( arguments )
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . NUMBER
    (24) expression -> . NAME
    (25) expression -> . STRING

    NAME            shift and go to state 13
    -               shift and go to state 15
    (               shift and go to state 14
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17

    expression                     shift and go to state 28

state 15

    (21) expression -> - . expression
    (7) expression -> . NAME ( arguments )
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . NUMBER
    (24) expression -> . NAME
    (25) expression -> . STRING

    NAME            shift and go to state 13
    -               shift and go to state 15
    (               shift and go to state 14
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17

    expression                     shift and go to state 29

state 16

    (23) expression -> NUMBER .

    +               reduce using rule 23 (expression -> NUMBER .)
    -               reduce using rule 23 (expression -> NUMBER .)
    *               reduce using rule 23 (expression -> NUMBER .)
    /               reduce using rule 23 (expression -> NUMBER .)
    ,               reduce using rule 23 (expression -> NUMBER .)
    FN              reduce using rule 23 (expression -> NUMBER .)
    PRINT           reduce using rule 23 (expression -> NUMBER .)
    VAR             reduce using rule 23 (expression -> NUMBER .)
    NAME            reduce using rule 23 (expression -> NUMBER .)
    $end            reduce using rule 23 (expression -> NUMBER .)
    }               reduce using rule 23 (expression -> NUMBER .)
    )               reduce using rule 23 (expression -> NUMBER .)


state 17

    (25) expression -> STRING .

    +               reduce using rule 25 (expression -> STRING .)
    -               reduce using rule 25 (expression -> STRING .)
    *               reduce using rule 25 (expression -> STRING .)
    /               reduce using rule 25 (expression -> STRING .)
    ,               reduce using rule 25 (expression -> STRING .)
    FN              reduce using rule 25 (expression -> STRING .)
    PRINT           reduce using rule 25 (expression -> STRING .)
    VAR             reduce using rule 25 (expression -> STRING .)
    NAME            reduce using rule 25 (expression -> STRING .)
    $end            reduce using rule 25 (expression -> STRING .)
    }               reduce using rule 25 (expression -> STRING .)
    )               reduce using rule 25 (expression -> STRING .)


state 18

    (12) statement -> VAR var_declaration_list .
    (13) var_declaration_list -> var_declaration_list . , var_declaration

    FN              reduce using rule 12 (statement -> VAR var_declaration_list .)
    PRINT           reduce using rule 12 (statement -> VAR var_declaration_list .)
    VAR             reduce using rule 12 (statement -> VAR var_declaration_list .)
    NAME            reduce using rule 12 (statement -> VAR var_declaration_list .)
    $end            reduce using rule 12 (statement -> VAR var_declaration_list .)
    }               reduce using rule 12 (statement -> VAR var_declaration_list .)
    ,               shift and go to state 30


state 19

    (14) var_declaration_list -> var_declaration .

    ,               reduce using rule 14 (var_declaration_list -> var_declaration .)
    FN              reduce using rule 14 (var_declaration_list -> var_declaration .)
    PRINT           reduce using rule 14 (var_declaration_list -> var_declaration .)
    VAR             reduce using rule 14 (var_declaration_list -> var_declaration .)
    NAME            reduce using rule 14 (var_declaration_list -> var_declaration .)
    $end            reduce using rule 14 (var_declaration_list -> var_declaration .)
    }               reduce using rule 14 (var_declaration_list -> var_declaration .)


state 20

    (3) statement -> FN NAME ( . parameters ) ARROW DTYPE NAME { body }
    (4) statement -> FN NAME ( . ) { body }
    (5) parameters -> . parameters , DTYPE NAME
    (6) parameters -> . DTYPE NAME

    )               shift and go to state 32
    DTYPE           shift and go to state 33

    parameters                     shift and go to state 31

state 21

    (15) var_declaration -> NAME = expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression

    FN              reduce using rule 15 (var_declaration -> NAME = expression .)
    PRINT           reduce using rule 15 (var_declaration -> NAME = expression .)
    VAR             reduce using rule 15 (var_declaration -> NAME = expression .)
    NAME            reduce using rule 15 (var_declaration -> NAME = expression .)
    $end            reduce using rule 15 (var_declaration -> NAME = expression .)
    }               reduce using rule 15 (var_declaration -> NAME = expression .)
    ,               reduce using rule 15 (var_declaration -> NAME = expression .)
    +               shift and go to state 23
    -               shift and go to state 24
    *               shift and go to state 25
    /               shift and go to state 26


state 22

    (10) arguments -> arguments , . expression
    (7) expression -> . NAME ( arguments )
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . NUMBER
    (24) expression -> . NAME
    (25) expression -> . STRING

    NAME            shift and go to state 13
    -               shift and go to state 15
    (               shift and go to state 14
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17

    expression                     shift and go to state 34

state 23

    (17) expression -> expression + . expression
    (7) expression -> . NAME ( arguments )
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . NUMBER
    (24) expression -> . NAME
    (25) expression -> . STRING

    NAME            shift and go to state 13
    -               shift and go to state 15
    (               shift and go to state 14
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17

    expression                     shift and go to state 35

state 24

    (18) expression -> expression - . expression
    (7) expression -> . NAME ( arguments )
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . NUMBER
    (24) expression -> . NAME
    (25) expression -> . STRING

    NAME            shift and go to state 13
    -               shift and go to state 15
    (               shift and go to state 14
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17

    expression                     shift and go to state 36

state 25

    (19) expression -> expression * . expression
    (7) expression -> . NAME ( arguments )
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . NUMBER
    (24) expression -> . NAME
    (25) expression -> . STRING

    NAME            shift and go to state 13
    -               shift and go to state 15
    (               shift and go to state 14
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17

    expression                     shift and go to state 37

state 26

    (20) expression -> expression / . expression
    (7) expression -> . NAME ( arguments )
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . NUMBER
    (24) expression -> . NAME
    (25) expression -> . STRING

    NAME            shift and go to state 13
    -               shift and go to state 15
    (               shift and go to state 14
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17

    expression                     shift and go to state 38

state 27

    (7) expression -> NAME ( . arguments )
    (10) arguments -> . arguments , expression
    (11) arguments -> . expression
    (7) expression -> . NAME ( arguments )
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (21) expression -> . - expression
    (22) expression -> . ( expression )
    (23) expression -> . NUMBER
    (24) expression -> . NAME
    (25) expression -> . STRING

    NAME            shift and go to state 13
    -               shift and go to state 15
    (               shift and go to state 14
    NUMBER          shift and go to state 16
    STRING          shift and go to state 17

    arguments                      shift and go to state 39
    expression                     shift and go to state 12

state 28

    (22) expression -> ( expression . )
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression

    )               shift and go to state 40
    +               shift and go to state 23
    -               shift and go to state 24
    *               shift and go to state 25
    /               shift and go to state 26


state 29

    (21) expression -> - expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression

    +               reduce using rule 21 (expression -> - expression .)
    -               reduce using rule 21 (expression -> - expression .)
    *               reduce using rule 21 (expression -> - expression .)
    /               reduce using rule 21 (expression -> - expression .)
    ,               reduce using rule 21 (expression -> - expression .)
    FN              reduce using rule 21 (expression -> - expression .)
    PRINT           reduce using rule 21 (expression -> - expression .)
    VAR             reduce using rule 21 (expression -> - expression .)
    NAME            reduce using rule 21 (expression -> - expression .)
    $end            reduce using rule 21 (expression -> - expression .)
    }               reduce using rule 21 (expression -> - expression .)
    )               reduce using rule 21 (expression -> - expression .)

  ! +               [ shift and go to state 23 ]
  ! -               [ shift and go to state 24 ]
  ! *               [ shift and go to state 25 ]
  ! /               [ shift and go to state 26 ]


state 30

    (13) var_declaration_list -> var_declaration_list , . var_declaration
    (15) var_declaration -> . NAME = expression
    (16) var_declaration -> . NAME

    NAME            shift and go to state 4

    var_declaration                shift and go to state 41

state 31

    (3) statement -> FN NAME ( parameters . ) ARROW DTYPE NAME { body }
    (5) parameters -> parameters . , DTYPE NAME

    )               shift and go to state 42
    ,               shift and go to state 43


state 32

    (4) statement -> FN NAME ( ) . { body }

    {               shift and go to state 44


state 33

    (6) parameters -> DTYPE . NAME

    NAME            shift and go to state 45


state 34

    (10) arguments -> arguments , expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression

    ,               reduce using rule 10 (arguments -> arguments , expression .)
    FN              reduce using rule 10 (arguments -> arguments , expression .)
    PRINT           reduce using rule 10 (arguments -> arguments , expression .)
    VAR             reduce using rule 10 (arguments -> arguments , expression .)
    NAME            reduce using rule 10 (arguments -> arguments , expression .)
    $end            reduce using rule 10 (arguments -> arguments , expression .)
    }               reduce using rule 10 (arguments -> arguments , expression .)
    )               reduce using rule 10 (arguments -> arguments , expression .)
    +               shift and go to state 23
    -               shift and go to state 24
    *               shift and go to state 25
    /               shift and go to state 26


state 35

    (17) expression -> expression + expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression

    +               reduce using rule 17 (expression -> expression + expression .)
    -               reduce using rule 17 (expression -> expression + expression .)
    ,               reduce using rule 17 (expression -> expression + expression .)
    FN              reduce using rule 17 (expression -> expression + expression .)
    PRINT           reduce using rule 17 (expression -> expression + expression .)
    VAR             reduce using rule 17 (expression -> expression + expression .)
    NAME            reduce using rule 17 (expression -> expression + expression .)
    $end            reduce using rule 17 (expression -> expression + expression .)
    }               reduce using rule 17 (expression -> expression + expression .)
    )               reduce using rule 17 (expression -> expression + expression .)
    *               shift and go to state 25
    /               shift and go to state 26

  ! *               [ reduce using rule 17 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 17 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 23 ]
  ! -               [ shift and go to state 24 ]


state 36

    (18) expression -> expression - expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression

    +               reduce using rule 18 (expression -> expression - expression .)
    -               reduce using rule 18 (expression -> expression - expression .)
    ,               reduce using rule 18 (expression -> expression - expression .)
    FN              reduce using rule 18 (expression -> expression - expression .)
    PRINT           reduce using rule 18 (expression -> expression - expression .)
    VAR             reduce using rule 18 (expression -> expression - expression .)
    NAME            reduce using rule 18 (expression -> expression - expression .)
    $end            reduce using rule 18 (expression -> expression - expression .)
    }               reduce using rule 18 (expression -> expression - expression .)
    )               reduce using rule 18 (expression -> expression - expression .)
    *               shift and go to state 25
    /               shift and go to state 26

  ! *               [ reduce using rule 18 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 18 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 23 ]
  ! -               [ shift and go to state 24 ]


state 37

    (19) expression -> expression * expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression

    +               reduce using rule 19 (expression -> expression * expression .)
    -               reduce using rule 19 (expression -> expression * expression .)
    *               reduce using rule 19 (expression -> expression * expression .)
    /               reduce using rule 19 (expression -> expression * expression .)
    ,               reduce using rule 19 (expression -> expression * expression .)
    FN              reduce using rule 19 (expression -> expression * expression .)
    PRINT           reduce using rule 19 (expression -> expression * expression .)
    VAR             reduce using rule 19 (expression -> expression * expression .)
    NAME            reduce using rule 19 (expression -> expression * expression .)
    $end            reduce using rule 19 (expression -> expression * expression .)
    }               reduce using rule 19 (expression -> expression * expression .)
    )               reduce using rule 19 (expression -> expression * expression .)

  ! +               [ shift and go to state 23 ]
  ! -               [ shift and go to state 24 ]
  ! *               [ shift and go to state 25 ]
  ! /               [ shift and go to state 26 ]


state 38

    (20) expression -> expression / expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression

    +               reduce using rule 20 (expression -> expression / expression .)
    -               reduce using rule 20 (expression -> expression / expression .)
    *               reduce using rule 20 (expression -> expression / expression .)
    /               reduce using rule 20 (expression -> expression / expression .)
    ,               reduce using rule 20 (expression -> expression / expression .)
    FN              reduce using rule 20 (expression -> expression / expression .)
    PRINT           reduce using rule 20 (expression -> expression / expression .)
    VAR             reduce using rule 20 (expression -> expression / expression .)
    NAME            reduce using rule 20 (expression -> expression / expression .)
    $end            reduce using rule 20 (expression -> expression / expression .)
    }               reduce using rule 20 (expression -> expression / expression .)
    )               reduce using rule 20 (expression -> expression / expression .)

  ! +               [ shift and go to state 23 ]
  ! -               [ shift and go to state 24 ]
  ! *               [ shift and go to state 25 ]
  ! /               [ shift and go to state 26 ]


state 39

    (7) expression -> NAME ( arguments . )
    (10) arguments -> arguments . , expression

    )               shift and go to state 46
    ,               shift and go to state 22


state 40

    (22) expression -> ( expression ) .

    +               reduce using rule 22 (expression -> ( expression ) .)
    -               reduce using rule 22 (expression -> ( expression ) .)
    *               reduce using rule 22 (expression -> ( expression ) .)
    /               reduce using rule 22 (expression -> ( expression ) .)
    ,               reduce using rule 22 (expression -> ( expression ) .)
    FN              reduce using rule 22 (expression -> ( expression ) .)
    PRINT           reduce using rule 22 (expression -> ( expression ) .)
    VAR             reduce using rule 22 (expression -> ( expression ) .)
    NAME            reduce using rule 22 (expression -> ( expression ) .)
    $end            reduce using rule 22 (expression -> ( expression ) .)
    }               reduce using rule 22 (expression -> ( expression ) .)
    )               reduce using rule 22 (expression -> ( expression ) .)


state 41

    (13) var_declaration_list -> var_declaration_list , var_declaration .

    ,               reduce using rule 13 (var_declaration_list -> var_declaration_list , var_declaration .)
    FN              reduce using rule 13 (var_declaration_list -> var_declaration_list , var_declaration .)
    PRINT           reduce using rule 13 (var_declaration_list -> var_declaration_list , var_declaration .)
    VAR             reduce using rule 13 (var_declaration_list -> var_declaration_list , var_declaration .)
    NAME            reduce using rule 13 (var_declaration_list -> var_declaration_list , var_declaration .)
    $end            reduce using rule 13 (var_declaration_list -> var_declaration_list , var_declaration .)
    }               reduce using rule 13 (var_declaration_list -> var_declaration_list , var_declaration .)


state 42

    (3) statement -> FN NAME ( parameters ) . ARROW DTYPE NAME { body }

    ARROW           shift and go to state 47


state 43

    (5) parameters -> parameters , . DTYPE NAME

    DTYPE           shift and go to state 48


state 44

    (4) statement -> FN NAME ( ) { . body }
    (1) body -> . statement body
    (2) body -> . statement
    (3) statement -> . FN NAME ( parameters ) ARROW DTYPE NAME { body }
    (4) statement -> . FN NAME ( ) { body }
    (8) statement -> . PRINT arguments
    (9) statement -> . var_declaration
    (12) statement -> . VAR var_declaration_list
    (15) var_declaration -> . NAME = expression
    (16) var_declaration -> . NAME

    FN              shift and go to state 3
    PRINT           shift and go to state 5
    VAR             shift and go to state 7
    NAME            shift and go to state 4

    body                           shift and go to state 49
    statement                      shift and go to state 2
    var_declaration                shift and go to state 6

state 45

    (6) parameters -> DTYPE NAME .

    )               reduce using rule 6 (parameters -> DTYPE NAME .)
    ,               reduce using rule 6 (parameters -> DTYPE NAME .)


state 46

    (7) expression -> NAME ( arguments ) .

    +               reduce using rule 7 (expression -> NAME ( arguments ) .)
    -               reduce using rule 7 (expression -> NAME ( arguments ) .)
    *               reduce using rule 7 (expression -> NAME ( arguments ) .)
    /               reduce using rule 7 (expression -> NAME ( arguments ) .)
    ,               reduce using rule 7 (expression -> NAME ( arguments ) .)
    FN              reduce using rule 7 (expression -> NAME ( arguments ) .)
    PRINT           reduce using rule 7 (expression -> NAME ( arguments ) .)
    VAR             reduce using rule 7 (expression -> NAME ( arguments ) .)
    NAME            reduce using rule 7 (expression -> NAME ( arguments ) .)
    $end            reduce using rule 7 (expression -> NAME ( arguments ) .)
    }               reduce using rule 7 (expression -> NAME ( arguments ) .)
    )               reduce using rule 7 (expression -> NAME ( arguments ) .)


state 47

    (3) statement -> FN NAME ( parameters ) ARROW . DTYPE NAME { body }

    DTYPE           shift and go to state 50


state 48

    (5) parameters -> parameters , DTYPE . NAME

    NAME            shift and go to state 51


state 49

    (4) statement -> FN NAME ( ) { body . }

    }               shift and go to state 52


state 50

    (3) statement -> FN NAME ( parameters ) ARROW DTYPE . NAME { body }

    NAME            shift and go to state 53


state 51

    (5) parameters -> parameters , DTYPE NAME .

    )               reduce using rule 5 (parameters -> parameters , DTYPE NAME .)
    ,               reduce using rule 5 (parameters -> parameters , DTYPE NAME .)


state 52

    (4) statement -> FN NAME ( ) { body } .

    FN              reduce using rule 4 (statement -> FN NAME ( ) { body } .)
    PRINT           reduce using rule 4 (statement -> FN NAME ( ) { body } .)
    VAR             reduce using rule 4 (statement -> FN NAME ( ) { body } .)
    NAME            reduce using rule 4 (statement -> FN NAME ( ) { body } .)
    $end            reduce using rule 4 (statement -> FN NAME ( ) { body } .)
    }               reduce using rule 4 (statement -> FN NAME ( ) { body } .)


state 53

    (3) statement -> FN NAME ( parameters ) ARROW DTYPE NAME . { body }

    {               shift and go to state 54


state 54

    (3) statement -> FN NAME ( parameters ) ARROW DTYPE NAME { . body }
    (1) body -> . statement body
    (2) body -> . statement
    (3) statement -> . FN NAME ( parameters ) ARROW DTYPE NAME { body }
    (4) statement -> . FN NAME ( ) { body }
    (8) statement -> . PRINT arguments
    (9) statement -> . var_declaration
    (12) statement -> . VAR var_declaration_list
    (15) var_declaration -> . NAME = expression
    (16) var_declaration -> . NAME

    FN              shift and go to state 3
    PRINT           shift and go to state 5
    VAR             shift and go to state 7
    NAME            shift and go to state 4

    body                           shift and go to state 55
    statement                      shift and go to state 2
    var_declaration                shift and go to state 6

state 55

    (3) statement -> FN NAME ( parameters ) ARROW DTYPE NAME { body . }

    }               shift and go to state 56


state 56

    (3) statement -> FN NAME ( parameters ) ARROW DTYPE NAME { body } .

    FN              reduce using rule 3 (statement -> FN NAME ( parameters ) ARROW DTYPE NAME { body } .)
    PRINT           reduce using rule 3 (statement -> FN NAME ( parameters ) ARROW DTYPE NAME { body } .)
    VAR             reduce using rule 3 (statement -> FN NAME ( parameters ) ARROW DTYPE NAME { body } .)
    NAME            reduce using rule 3 (statement -> FN NAME ( parameters ) ARROW DTYPE NAME { body } .)
    $end            reduce using rule 3 (statement -> FN NAME ( parameters ) ARROW DTYPE NAME { body } .)
    }               reduce using rule 3 (statement -> FN NAME ( parameters ) ARROW DTYPE NAME { body } .)

